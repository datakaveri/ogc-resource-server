version: '3.7'

networks:
  ogc-net:
    driver: bridge

services:  
  test:
    image: ghcr.io/datakaveri/geoserver-test:latest
    volumes:
      - ./src/:/usr/share/app/src
      - /home/ubuntu/configs/ogc-config-dev.json:/usr/share/app/configs/config.json
      - /home/ubuntu/configs/ogc-config-test.json:/usr/share/app/configs/test.json
      - ./docker/runTests.sh:/usr/share/app/docker/runTests.sh
      - ${WORKSPACE}:/tmp/test
      - type: volume
        source: ogc-volume
        target: /usr/share/app/storage/temp-dir
    depends_on:
      - "s3mock"
    ports:
      - "8443:8080"
    restart: on-failure
    networks:
      - ogc-net
    logging:
         driver: "json-file"
         options:
             max-file: "5"
             max-size: "100m"
    command: bash -c "exec java -jar -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -javaagent:/tmp/jacoco/lib/jacocoagent.jar=output=tcpserver,address=0.0.0.0,port=57070,dumponexit=false -Ddisable.auth=true ./fatjar.jar  --host $$(hostname) -c configs/test.json"

  perfTest:
    image: ghcr.io/datakaveri/geoserver-dev:latest
    volumes:
      - /home/ubuntu/configs/ogc-config-dev.json:/usr/share/app/configs/config.json
      - type: volume
        source: ogc-volume
        target: /usr/share/app/storage/temp-dir
    depends_on:
      - "zookeeper"
    ports:
      - "8443:8080"
    restart: on-failure
    networks:
      - ogc-net
    logging:
         driver: "json-file"
         options:
             max-file: "5"
             max-size: "100m"
    command: bash -c "exec java -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -jar ./fatjar.jar  --host $$(hostname) -c configs/config.json"

  zookeeper:
    image: zookeeper:latest
    expose: 
      - "2181"
    networks:
      - ogc-net

  s3mock:
    image: adobe/s3mock:3.1.0
    environment:
      - initialBuckets=bucket1
    networks:
      - ogc-net
    ports:
      - 9090:9090

volumes:
  ogc-volume:
