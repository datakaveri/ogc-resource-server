openapi: 3.0.0
info:
  version: 1.0.1
  title: OGC Compliant IUDX Resource Server
  description: |-
    OGC compliant Features and Common API definitions.
    Includes Schema and Response Objects.
  contact:
    name: India Urban Data eXchange (IUDX)
    email: info@iudx.org.in
    url: 'https://iudx.org.in'
  license:
    url: 'https://opensource.org/license/mit/'
    name: MIT
servers:
  - url: 'https://ogc.iudx.io'
    description: OGC-Resource-Server
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: Landing page
      description: |
        Landing page for the OGC compliant Resource Server.
        It provides links to the API definition (link relations service-desc and service-doc), the Conformance declaration (path /conformance, link relation conformance), and the Feature Collections (path /collections, link relation data).
      operationId: getLandingPage
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        href:
                          type: string
                        rel:
                          type: string
                        type:
                          type: string
                        title:
                          type: string
                required:
                  - links
              examples:
                Example 1:
                  value:
                    title: Cities in state
                    description: Information about cities in a state.
                    links:
                      - href: 'https://ogc.iudx.io'
                        rel: self
                        type: application/json
                        title: this document
                      - href: 'https://ogc.iudx.io/api'
                        rel: service-desc
                        type: application/vnd.oai.openapi+json;version=3.0
                        title: the API definition
                      - href: 'https://ogc.iudx.io/conformance'
                        rel: conformance
                        type: application/json
                        title: OGC API conformance classes implemented by this server
                      - href: 'https://ogc.iudx.io/collections'
                        rel: data
                        type: application/json
                        title: Information about the feature collections
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  description:
                    type: string
              examples:
                Example 1:
                  value:
                    code: Bad Request
                    description: Missing/Invalid parameters
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  /conformance:
    get:
      tags:
        - Capabilities
      summary: information about specifications that the API Server conforms to
      description: |-
        A list of all conformance classes specified as per OGC standard that the
        server conforms to.
        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance classes it implements and conforms to.
      operationId: getConformanceClasses
      responses:
        '200':
          $ref: '#/components/responses/ConformanceDeclaration'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  /processes:
    get:
      tags:
        - ProcessList
      summary: retrieve the list of available processes
      description: |-
        The list of processes contains a summary of each process the OGC API - Processes offers, including the link to a more detailed description
        of the process.
      operationId: getProcesses
      parameters:
        - $ref: '#/components/parameters/limit'
      responses:
        "200":
          description: Information about the available processes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/processList'
        "500":
          $ref: '#/components/responses/ServerError'
  /collections:
    get:
      tags:
        - Capabilities
      summary: the feature collections in the dataset
      description: |-
        It will fetch the list of feature collections to DX Data Consumers based on the required format with default limit and offset values supplied. This API provides a birds-eye-view for all avialable Feature Collections. The dataset is organized as one or more feature collections. This resource provides information about and access to the collections.
        The response contains the list of collections. For each collection, a link to the items in the collection (path `/collections/{collectionId}/items`, link relation `items`) as well as key information about the collection. This information includes-
        * A local identifier for the collection that is unique for the dataset.
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude).
        * An optional title and description for the collection.
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data.
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      operationId: getCollections
      responses:
        '200':
          $ref: '#/components/responses/Collections'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  '/collections/{collectionId}':
    get:
      tags:
        - Capabilities
      summary: describe the feature collection with id `collectionId`
      description: |-
        The response contains a link to the items in the collection (path `/collections/{collectionId}/items`, link relation `items`) as well as key information about the collection. This information includes-
        * A local identifier for the collection that is unique for the dataset.
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude).
        * An optional title and description for the collection.
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data.
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      operationId: describeCollection
      parameters:
        - $ref: '#/components/parameters/collectionId'
      responses:
        '200':
          $ref: '#/components/responses/Collection'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  '/collections/{collectionId}/items':
    get:
      tags:
        - Data
      summary: fetch features
      description: |-
        Fetch features of the feature collection with id `collectionId`.

        Every feature in a dataset belongs to a collection. A dataset may
        consist of multiple feature collections. A feature collection is often a
        collection of features of a similar type, based on a common schema.

        The `bbox` and `datetime` parameter can be used to select only a
        subset of the features in the collection (the features that are in the
        bounding box or time interval). The `bbox` parameter matches all features
        in the collection that are not associated with a location, too. The
        `datetime` parameter matches all features in the collection that are
        not associated with a time stamp or interval, too.

        The `limit` and `offset` parameters may be used to control the subset of the
        selected features that should be returned in the response, the page size.
        Each page may include information about the number of selected and
        returned features (`numberMatched` and `numberReturned`).

        Use content negotiation to request for GeoJSON.
      operationId: getFeatures
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/bbox-crs'
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/collectionId'
      responses:
        '200':
          $ref: '#/components/responses/Features'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  '/collections/{collectionId}/items/{featureId}':
    get:
      tags:
        - Data
      summary: fetch a single feature
      description: |-
        Fetch the feature with id `featureId` in the feature collection
        with id `collectionId`.
      operationId: getFeature
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/featureId'
      responses:
        '200':
          $ref: '#/components/responses/Feature'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  /tileMatrixSets:
    get:
      tags:
        - Tiling Schemes
      summary: Retrieve the list of available tiling schemes (tile matrix sets)
      description: Retrieve the list of available tiling schemes (tile matrix sets)
      operationId: getTileMatrixSetsList
      responses:
        '200':
          $ref: '#/components/responses/TileMatrixSetsList'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  '/tileMatrixSets/{tileMatrixSetId}':
    get:
      tags:
        - Tiling Schemes
      summary: Retrieve the definition of the specified tiling scheme (tile matrix set)
      description: Retrieve the definition of the specified tiling scheme (tile matrix set)
      operationId: getTileMatrixSet
      parameters:
        - $ref: '#/components/parameters/tileMatrixSetId'
      responses:
        '200':
          $ref: '#/components/responses/TileMatrixSet'
        '404':
          description: The requested tile matrix set id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception404'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  '/collections/{collectionId}/map/tiles':
    get:
      tags:
        - Map Tiles
      summary: Retrieve a list of all map tilesets for specified collection.
      description: Retrieve a list of all map tilesets for specified collection.
      operationId: .collection.map.getTileSetsList
      parameters:
        - $ref: '#/components/parameters/collectionId-all'
      responses:
        '200':
          $ref: '#/components/responses/TileSetsList'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  '/collections/{collectionId}/map/tiles/{tileMatrixSetId}':
    get:
      tags:
        - Map Tiles
      summary: Retrieve a map tile set metadata for the specified collection and tiling scheme (tile matrix set)
      description: Retrieve a map tile set metadata for the specified collection and tiling scheme (tile matrix set)
      operationId: .collection.map.getTileSet
      parameters:
        - $ref: '#/components/parameters/collections'
        - $ref: '#/components/parameters/collectionId-all'
        - $ref: '#/components/parameters/tileMatrixSetId'
      responses:
        '200':
          $ref: '#/components/responses/TileSet'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
  '/collections/{collectionId}/map/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}':
    get:
      tags:
        - Map Tiles
      summary: Retrieve a map tile from the specified collection
      description: Retrieve a map tile from the specified collection
      operationId: .collection.map.getTile
      parameters:
        - $ref: '#/components/parameters/collections'
        - $ref: '#/components/parameters/tileMatrix'
        - $ref: '#/components/parameters/tileRow'
        - $ref: '#/components/parameters/tileCol'
        - $ref: '#/components/parameters/collectionId-all'
        - $ref: '#/components/parameters/tileMatrixSetId'
      responses:
        '200':
          $ref: '#/components/responses/MapTile'
        '204':
          $ref: '#/components/responses/EmptyTile'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'https://ogc.iudx.io'
          description: OGC-Resource-Server
tags:
  - name: Capabilities
    description: Essential characteristics of OGC APIs
  - name: Data
    description: Access to data belonging to a collection (features)
  - name: Map Tiles
    description: Map Tiles available with the server
  - name: Tiling Schemes
    description: Different Tiling Schemes available with the server
components:
  parameters:
    bbox:
      name: bbox
      in: query
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on whether the
        coordinate reference system includes a vertical axis (height or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        If the value consists of four numbers, the coordinate reference system is
        WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)
        unless a different coordinate reference system is specified in the parameter `bbox-crs`.

        If the value consists of six numbers, the coordinate reference system is WGS 84
        longitude/latitude/ellipsoidal height (http://www.opengis.net/def/crs/OGC/0/CRS84h)
        unless a different coordinate reference system is specified in the parameter `bbox-crs`.

        The query parameter `bbox-crs` is specified in OGC API - Features - Part 2: Coordinate
        Reference Systems by Reference.

        For WGS 84 longitude/latitude the values are in most cases the sequence of
        minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the decision of the
        server whether only a single spatial geometry property is used to determine
        the extent or all relevant geometries.
      required: false
      style: form
      explode: false
      schema:
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: number
    bbox-crs:
      name: bbox-crs
      in: query
      required: false
      schema:
        type: string
        format: uri
      style: form
      explode: false
    crs:
      name: crs
      in: query
      required: false
      schema:
        type: string
        format: uri
      style: form
      explode: false
    datetime:
      name: datetime
      in: query
      description: |-
        Either a date-time or an interval. Date and time expressions adhere to RFC 3339.
        Intervals may be bounded or half-bounded (double-dots at start or end).

        Examples:

        * A date-time: "2018-02-12T23:20:50Z"
        * A bounded interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Half-bounded intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

        Only features that have a temporal property that intersects the value of
        `datetime` are selected.

        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      required: false
      style: form
      explode: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: |-
        The optional limit parameter limits the number of items that are presented in the response document.

        Only items are counted that are on the first level of the collection in the response document.
        Nested objects contained within the explicitly requested items shall not be counted.

        Minimum = 1. Maximum = 10000. Default = 10.
      required: false
      style: form
      explode: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10
    offset:
      name: offset
      in: query
      description: |-
        OGC Resource server also offers way to paginate the result for queries.
        If a query returns large number of records then user can use additional parameters in query parameters to limit numbers of records
        to be returned.

        Minimum = 0. Maximum = 1000. Default = 10.
      required: false
      style: form
      explode: false
      schema:
        type: integer
        minimum: 0
        maximum: 2000000
        default: 10
    collections:
      name: collections
      in: query
      description: 'The collections that should be included in the response. The parameter value is a comma-separated list of collection identifiers. If the parameters is missing, some or all collections will be included. The collection will be rendered in the order specified, with the last one showing on top, unless the priority is overridden by styling rules.'
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/all-collections'
    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
    featureId:
      name: featureId
      in: path
      description: local identifier of a feature
      required: true
      schema:
        type: string
    tileMatrixSetId:
      name: tileMatrixSetId
      in: path
      description: Identifier for a supported TileMatrixSet
      required: true
      allowEmptyValue: false
      schema:
        $ref: '#/components/schemas/tileMatrixSets'
    collectionId-all:
      name: collectionId
      in: path
      description: Local identifier of a collection
      required: true
      schema:
        $ref: '#/components/schemas/all-collections'
    tileMatrix:
      name: tileMatrix
      in: path
      description: |-
        Identifier selecting one of the scales defined in the TileMatrixSet and representing the scaleDenominator the tile. For example,
        Ireland is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and tileCol=15.
      required: true
      schema:
        type: string
        example: '5'
      examples:
        default:
          value: '5'
    tileRow:
      name: tileRow
      in: path
      description: 'Row index of the tile on the selected TileMatrix. It cannot exceed the MatrixWidth-1 for the selected TileMatrix. For example, Ireland is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and tileCol=15.'
      required: true
      schema:
        type: integer
        minimum: 0
        example: 10
      examples:
        default:
          value: 10
    tileCol:
      name: tileCol
      in: path
      description: 'Column index of the tile on the selected TileMatrix. It cannot exceed the MatrixHeight-1 for the selected TileMatrix. For example, Ireland is fully within the Tile at WebMercatorQuad tileMatrix=5, tileRow=10 and tileCol=15.'
      required: true
      schema:
        type: integer
        minimum: 0
        example: 15
      examples:
        default:
          value: 15
  responses:
    LandingPage:
      description: |-
        The landing page provides links to the API definition
        (link relations `service-desc` and `service-doc`),
        the Conformance declaration (path `/conformance`,
        link relation `conformance`), and the Feature
        Collections (path `/collections`, link relation
        `data`).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
          examples:
            default:
              value:
                title: OGC Compliant IUDX Geospatial Resource Server Landing Page
                description: This landing page provides all the links as per the OGC compliance in JSON format
                links:
                  - href: 'https://ogc.iudx.io/'
                    rel: self
                    type: application/json
                    title: this document
                  - href: 'https://ogc.iudx.io/api'
                    rel: service-desc
                    type: application/vnd.oai.openapi+json;version=3.0
                    title: the API definition
                  - href: 'https://ogc.iudx.io/conformance'
                    rel: conformance
                    type: application/json
                    title: OGC API conformance classes implemented by this server
                  - href: 'https://ogc.iudx.io/collections'
                    rel: data
                    type: application/json
                    title: Information about the feature collections
    ConformanceDeclaration:
      description: The URIs of all conformance classes supported by the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/confClasses'
          examples:
            Example 1:
              value:
                conformsTo:
                  - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/req/json'
                  - 'http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/landing-page'
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson'
    Collections:
      description: The feature collections shared by this API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collections'
          examples:
            default:
              value:
                links:
                  - href: 'https://ogc.iudx.io/collections'
                    rel: self
                    type: application/json
                    title: this document
                collections:
                  - id: fd6ef7c5-b18c-48e6-94e3-81037706763d
                    title: Districts in India
                    description: Geographic information of districts in India
                    links:
                      - href: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items'
                        rel: items
                        type: application/geo+json
                        title: Districts in India
    Collection:
      description: Information about the feature collection with id `collectionId`.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collection'
          examples:
            collection:
              value:
                id: fd6ef7c5-b18c-48e6-94e3-81037706763d
                itemType: feature
                title: Districts in India
                description: Geographic information of districts in India
                links:
                  - href: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items'
                    rel: items
                    type: application/geo+json
                    title: Districts in India
                  - href: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d'
                    rel: self
                    type: application/geo+json
                    title: Districts in India
    Features:
      description: |-
        The response is a document consisting of features in the collection.
        The features included in the response are determined by the server
        based on the query parameters of the request. To support access to
        larger collections without overloading the client, the API supports
        paged access using `limit` and `offset` paramters.
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/featureCollectionGeoJSON'
          examples:
            default:
              value:
                type: FeatureCollection
                links:
                  - href: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items'
                    rel: self
                    type: application/geo+json
                    title: this document
                  - href: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items?offset=10&limit=2'
                    rel: next
                    type: application/geo+json
                    title: next page
                numberMatched: 123
                numberReturned: 2
                features:
                  - type: Feature
                    id: 4f449c78-3233-4c07-824c-08f7d45cee0e
                    geometry:
                      type: Point
                      coordinates:
                        - 76.787052042
                        - 30.37598763
                    properties:
                      hq: AMBALA
                      state: HARYANA
                      timestamp: '2023-07-25 07:22:36 UTC'
                  - type: Feature
                    id: 3f449c78-3233-4c07-824c-08f7d45cee03
                    geometry:
                      type: Point
                      coordinates:
                        - 76.787052042
                        - 30.37598763
                    properties:
                      hq: HYDERABAD
                      state: TELENGANA
                      timestamp: '2023-07-25 07:22:36 UTC'
    Feature:
      description: |-
        fetch the feature with id `featureId` in the feature collection
        with id `collectionId`
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/featureGeoJSON'
          examples:
            default:
              value:
                type: Feature
                links:
                  - href: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d/items/4f449c78-3233-4c07-824c-08f7d45cee0e'
                    rel: self
                    type: application/geo+json
                    title: this document
                  - href: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d'
                    rel: collection
                    type: application/geo+json
                    title: the collection document
                id: 4f449c78-3233-4c07-824c-08f7d45cee0e
                geometry:
                  type: Point
                  coordinates:
                    - 76.787052042
                    - 30.37598763
                properties:
                  hq: AMBALA
                  state: HARYANA
                  datetime: '2023-07-25 07:22:36 UTC'
    InvalidParameter:
      description: A query parameter has an invalid value.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception400'
    NotFound:
      description: 'The requested resource does not exist on the server. For example, a path parameter had an incorrect value.'
    NotAcceptable:
      description: 'Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource.'
    ServerError:
      description: A server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception500'
    TileMatrixSetsList:
      description: List of tile matrix sets (tiling schemes).
      content:
        application/json:
          schema:
            type: object
            properties:
              tileMatrixSets:
                type: array
                items:
                  $ref: '#/components/schemas/tileMatrixSet-item'
    TileMatrixSet:
      description: tile matrix set
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tileMatrixSet'
    TileSetsList:
      description: List of available tilesets.
      content:
        application/json:
          schema:
            type: object
            properties:
              links:
                type: array
                items:
                  $ref: '#/components/schemas/link'
              tilesets:
                type: array
                items:
                  $ref: '#/components/schemas/tileSet-item'
            required:
              - tilesets
    TileSet:
      description: Description of the tileset
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tileSet'
    MapTile:
      description: A map tile image returned as a response.
      content:
        image/png:
          schema:
            type: string
            format: binary
    EmptyTile:
      description: No data available for this tile.
  schemas:
    exception404:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
        - code
        - description
      example:
        code: Not Found
        description: Resource not found
    all-collections:
      type: string
    tileMatrixSets:
      enum:
        - WebMercatorQuad
        - WorldCRS84Quad
        - GNOSISGlobalGrid
        - WorldMercatorWGS84Quad
    landingPage:
      type: object
      properties:
        title:
          type: string
        links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
              type:
                type: string
              title:
                type: string
            required:
              - href
              - rel
        description:
          type: string
      required:
        - links
      example:
        title: OGC Compliant IUDX Geospatial Resource Server Landing Page
        description: This landing page provides all the links as per the OGC compliance in JSON format
        links:
          - href: 'https://ogc.iudx.io/'
            rel: self
            type: application/json
            title: this document
          - href: 'https://ogc.iudx.io/api'
            rel: service-desc
            type: application/vnd.oai.openapi+json;version=3.0
            title: the API definition
          - href: 'https://ogc.iudx.io/conformance'
            rel: conformance
            type: application/json
            title: OGC API conformance classes implemented by this server
          - href: 'https://ogc.iudx.io/collections'
            rel: data
            type: application/json
            title: Information about the feature collections
    confClasses:
      type: object
      properties:
        conformsTo:
          type: array
          items:
            type: string
      required:
        - conformsTo
      example:
        conformsTo:
          - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'
          - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'
          - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson'
    collections:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collection'
      required:
        - links
        - collections
    link:
      type: object
      properties:
        href:
          type: string
          example: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037706763d'
        rel:
          type: string
          example: self
        type:
          type: string
          example: application/geo+json
        title:
          type: string
          example: Districts in India
      required:
        - href
        - rel
    collection:
      type: object
      properties:
        id:
          type: string
        itemType:
          type: string
        title:
          type: string
        description:
          type: string
        crs:
          description: a global list of CRS identifiers that are supported by spatial feature collections offered by the service
          type: array
          items:
            type: string
            format: uri
        links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
              type:
                type: string
              title:
                type: string
      example:
        id: fd6ef7c5-b18c-48e6-94e3-81037702863d
        itemType: feature
        title: Districts in India
        description: Information about districts in India
        links:
          - href: 'https://ogc.iudx.io/collections/fd6ef7c5-b18c-48e6-94e3-81037702863d'
            rel: self
            type: application/geo+json
            title: Districts in India
    featureCollectionGeoJSON:
      type: object
      properties:
        type:
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        numberMatched:
          $ref: '#/components/schemas/numberMatched'
        numberReturned:
          $ref: '#/components/schemas/numberReturned'
      required:
        - type
        - features
    featureGeoJSON:
      type: object
      properties:
        type:
          enum:
            - Feature
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        properties:
          type: object
        id:
          oneOf:
            - type: string
            - type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
      required:
        - type
        - geometry
        - properties
    geometryGeoJSON:
      oneOf:
        - $ref: '#/components/schemas/pointGeoJSON'
        - $ref: '#/components/schemas/multipointGeoJSON'
        - $ref: '#/components/schemas/linestringGeoJSON'
        - $ref: '#/components/schemas/multilinestringGeoJSON'
        - $ref: '#/components/schemas/polygonGeoJSON'
        - $ref: '#/components/schemas/multipolygonGeoJSON'
        - $ref: '#/components/schemas/geometrycollectionGeoJSON'
    pointGeoJSON:
      type: object
      properties:
        type:
          enum:
            - Point
        coordinates:
          type: array
          minItems: 2
          items:
            type: number
      required:
        - type
        - coordinates
    multipointGeoJSON:
      type: object
      properties:
        type:
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
      required:
        - type
        - coordinates
    linestringGeoJSON:
      type: object
      properties:
        type:
          enum:
            - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            type: array
            minItems: 2
            items:
              type: number
      required:
        - type
        - coordinates
    multilinestringGeoJSON:
      type: object
      properties:
        type:
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
      required:
        - type
        - coordinates
    polygonGeoJSON:
      type: object
      properties:
        type:
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
      required:
        - type
        - coordinates
    multipolygonGeoJSON:
      type: object
      properties:
        type:
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                type: array
                minItems: 2
                items:
                  type: number
      required:
        - type
        - coordinates
    geometrycollectionGeoJSON:
      type: object
      properties:
        type:
          enum:
            - GeometryCollection
        geometries:
          type: array
          items:
            $ref: '#/components/schemas/geometryGeoJSON'
      required:
        - type
        - geometries
    numberMatched:
      type: integer
      description: |-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      minimum: 0
      example: 127
    numberReturned:
      type: integer
      description: |-
        The number of features in the feature collection.

        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.

        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      minimum: 0
      example: 10
    exception400:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
        - code
        - description
      example:
        code: Bad Request
        description: Missing/Invalid parameters
    exception500:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
        - code
        - description
      example:
        code: Internal Server Error
        description: Internal Server Error
    tileMatrixSet-item:
      type: object
      title: Tile Matrix Set Item
      description: A minimal tile matrix set element for use within a list of tile matrix sets linking to a full definition.
      properties:
        id:
          type: string
          description: 'Optional local tile matrix set identifier, e.g. for use as unspecified `{tileMatrixSetId}` parameter. Implementation of ''identifier'''
          example: Tile-matrix-set-id-1
        title:
          type: string
          description: 'Title of this tile matrix set, normally used for display to a human'
          example: WebMercatorQuad Tile Matrix Set
        uri:
          type: string
          description: Reference to an official source for this tileMatrixSet
          format: uri
          example: 'http://www.opengis.net/def/tilematrixset/OGC/1.0/WebMercatorQuad'
        crs:
          allOf:
            - description: Coordinate Reference System (CRS)
            - $ref: '#/components/schemas/crs'
          example: 'http://www.opengis.net/def/crs/EPSG/0/3857'
        links:
          type: array
          description: Links to related resources. A 'self' link to the tile matrix set definition is required.
          items:
            $ref: '#/components/schemas/link'
      required:
        - links
    crs:
      title: CRS
      oneOf:
        - type: string
          description: Simplification of the object into a url if the other properties are not present
        - type: object
          oneOf:
            - type: object
              properties:
                uri:
                  type: string
                  description: Reference to one coordinate reference system (CRS)
                  format: uri
              required:
                - uri
            - type: object
              properties:
                wkt:
                  allOf:
                    - description: An object defining the CRS using the JSON encoding for Well-known text representation of coordinate reference systems 2.0
                    - type: object
              required:
                - wkt
            - type: object
              properties:
                referenceSystem:
                  type: object
                  description: A reference system data structure as defined in the MD_ReferenceSystem of the ISO 19115
              required:
                - referenceSystem
    tileMatrixSet:
      type: object
      title: Tile Matrix Set Definition
      description: 'A definition of a tile matrix set following the Tile Matrix Set standard. For tileset metadata, such a description (in `tileMatrixSet` property) is only required for offline use, as an alternative to a link with a `http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme` relation type.'
      properties:
        title:
          type: string
          description: 'Title of this tile matrix set, normally used for display to a human'
          example: WebMercatorQuad Tile Matrix Set
        description:
          type: string
          description: 'Brief narrative description of this tile matrix set, normally available for display to a human'
          example: Definition of the WebMercatorQuad TileMatrixSet
        keywords:
          type: array
          description: Unordered list of one or more commonly used or formalized word(s) or phrase(s) used to describe this tile matrix set
          items:
            type: string
        id:
          type: string
          description: Tile matrix set identifier. Implementation of 'identifier'
          example: Tile-matrix-set-id-1
        uri:
          type: string
          description: Reference to an official source for this tileMatrixSet
          format: uri
          example: 'http://www.opengis.net/def/tilematrixset/OGC/1.0/WebMercatorQuad'
        orderedAxes:
          type: array
          minItems: 1
          items:
            type: string
        crs:
          allOf:
            - description: Coordinate Reference System (CRS)
            - $ref: '#/components/schemas/crs'
          example: 'http://www.opengis.net/def/crs/EPSG/0/3857'
        wellKnownScaleSet:
          type: string
          description: Reference to a well-known scale set
          format: uri
          example: 'http://www.opengis.net/def/wkss/OGC/1.0/GoogleMapsCompatible'
        tileMatrices:
          type: array
          description: Describes scale levels and its tile matrices
          items:
            type: object
            description: 'A tile matrix, usually corresponding to a particular zoom level of a TileMatrixSet.'
            properties:
              title:
                type: string
                description: 'Title of this tile matrix, normally used for display to a human'
              description:
                type: string
                description: 'Brief narrative description of this tile matrix set, normally available for display to a human'
              keywords:
                type: array
                description: Unordered list of one or more commonly used or formalized word(s) or phrase(s) used to describe this dataset
                items:
                  type: string
              id:
                type: string
                description: Identifier selecting one of the scales defined in the TileMatrixSet and representing the scaleDenominator the tile. Implementation of 'identifier'
              scaleDenominator:
                type: number
                description: Scale denominator of this tile matrix
              cellSize:
                type: number
                description: Cell size of this tile matrix
              cornerOfOrigin:
                enum:
                  - topLeft
                  - bottomLeft
                description: 'The corner of the tile matrix (_topLeft_ or _bottomLeft_) used as the origin for numbering tile rows and columns. This corner is also a corner of the (0, 0) tile.'
                default: topLeft
              pointOfOrigin:
                allOf:
                  - description: 'Precise position in CRS coordinates of the corner of origin (e.g. the top-left corner) for this tile matrix. This position is also a corner of the (0, 0) tile. In previous version, this was ''topLeftCorner'' and ''cornerOfOrigin'' did not exist.'
                  - $ref: '#/components/schemas/2DPoint'
              tileWidth:
                type: number
                description: Width of each tile of this tile matrix in pixels
                format: integer
                minimum: 1
                multipleOf: 1
              tileHeight:
                type: number
                description: Height of each tile of this tile matrix in pixels
                format: integer
                minimum: 1
                multipleOf: 1
              matrixHeight:
                type: number
                description: Width of the matrix (number of tiles in width)
                format: integer
                minimum: 1
                multipleOf: 1
              matrixWidth:
                type: number
                description: Height of the matrix (number of tiles in height)
                format: integer
                minimum: 1
                multipleOf: 1
              variableMatrixWidths:
                type: array
                description: Describes the rows that has variable matrix width
                items:
                  type: object
                  description: Variable Matrix Width data structure
                  properties:
                    coalesce:
                      type: number
                      description: Number of tiles in width that coalesce in a single tile for these rows
                      format: integer
                      minimum: 2
                      multipleOf: 1
                    minTileRow:
                      type: number
                      description: First tile row where the coalescence factor applies for this tilematrix
                      format: integer
                      minimum: 0
                      multipleOf: 1
                    maxTileRow:
                      type: number
                      description: Last tile row where the coalescence factor applies for this tilematrix
                      format: integer
                      minimum: 0
                      multipleOf: 1
                  required:
                    - coalesce
                    - minTileRow
                    - maxTileRow
            required:
              - id
              - scaleDenominator
              - cellSize
              - pointOfOrigin
              - tileWidth
              - tileHeight
              - matrixHeight
              - matrixWidth
      required:
        - crs
        - tileMatrices
    2DPoint:
      type: array
      description: A 2D Point in the CRS indicated elsewhere
      minItems: 2
      maxItems: 2
      items:
        type: number
    tileSet-item:
      type: object
      title: Tile Set Metadata item
      description: A minimal tileset element for use within a list of tilesets linking to full description of those tilesets.
      properties:
        title:
          type: string
          description: A title for this tileset
          example: 'TileSet Id #1'
        dataType:
          allOf:
            - description: Type of data represented in the tileset
            - $ref: '#/components/schemas/dataType'
          example: map
        crs:
          allOf:
            - description: Coordinate Reference System (CRS)
            - $ref: '#/components/schemas/crs'
          example: 'http://www.opengis.net/def/crs/EPSG/0/3857'
        tileMatrixSetURI:
          type: string
          description: 'Reference to a Tile Matrix Set on an offical source for Tile Matrix Sets such as the OGC NA definition server (http://www.opengis.net/def/tms/). Required if the tile matrix set is registered on an open official source.'
          format: uri
          example: 'http://www.opengis.net/def/tilematrixset/OGC/1.0/WebMercatorQuad'
        links:
          type: array
          description: 'Links to related resources. A ''self'' link to the tileset as well as a ''http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'' link to a definition of the TileMatrixSet are required.'
          items:
            $ref: '#/components/schemas/link'
      required:
        - dataType
        - crs
        - links
    dataType:
      oneOf:
        - type: string
        - enum:
            - map
            - vector
            - coverage
    tileSet:
      type: object
      title: Tile Set Metadata
      description: 'A resource describing a tileset based on the OGC TileSet Metadata Standard. At least one of the ''TileMatrixSet'',  or a link with ''rel'' http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'
      properties:
        title:
          type: string
          description: A title for this tileset
          example: 'TileSet Id #1'
        description:
          type: string
          description: Brief narrative description of this tile set
        dataType:
          allOf:
            - description: Type of data represented in the tileset
            - $ref: '#/components/schemas/dataType'
          example: map
        crs:
          allOf:
            - description: Coordinate Reference System (CRS)
            - $ref: '#/components/schemas/crs'
          example: 'http://www.opengis.net/def/crs/EPSG/0/3857'
        tileMatrixSetURI:
          type: string
          description: 'Reference to a Tile Matrix Set on an offical source for Tile Matrix Sets such as the OGC NA definition server (http://www.opengis.net/def/tms/). Required if the tile matrix set is registered on an open official source.'
          format: uri
          example: 'http://www.opengis.net/def/tilematrixset/OGC/1.0/WebMercatorQuad'
        links:
          type: array
          description: 'Links to related resources. Possible link ''rel'' values are: ''http://www.opengis.net/def/rel/ogc/1.0/dataset'' for a URL pointing to the dataset, ''item'' for a URL template to get a tile; ''alternate'' for a URL pointing to another representation of the TileSetMetadata (e.g a TileJSON file); ''http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'' for a definition of the TileMatrixSet; ''http://www.opengis.net/def/rel/ogc/1.0/geodata'' for pointing to a single collection (if the tileset represents a single collection)'
          items:
            $ref: '#/components/schemas/link'
        tileMatrixSetLimits:
          type: array
          description: 'Limits for the TileRow and TileCol values for each TileMatrix in the tileMatrixSet. If missing, there are no limits other that the ones imposed by the TileMatrixSet. If present the TileMatrices listed are limited and the rest not available at all'
          items:
            $ref: '#/components/schemas/tileMatrixLimits'
      required:
        - dataType
        - crs
        - links
    tileMatrixLimits:
      type: object
      title: TileMatrixLimits
      description: 'The limits for an individual tile matrix of a TileSet''s TileMatrixSet, as defined in the OGC 2D TileMatrixSet and TileSet Metadata Standard'
      properties:
        tileMatrix:
          type: string
        minTileRow:
          type: integer
          minimum: 0
        maxTileRow:
          type: integer
          minimum: 0
        minTileCol:
          type: integer
          minimum: 0
        maxTileCol:
          type: integer
          minimum: 0
      required:
        - tileMatrix
        - minTileRow
        - maxTileRow
        - minTileCol
        - maxTileCol
    processList:
      required:
        - links
        - processes
      type: object
      properties:
        processes:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        links:
          type: array
          items:
            $ref: '#/components/schemas/processesLink'

    processSummary:
      allOf:
        - $ref: '#/components/schemas/descriptionType'
        - type: object
          required:
            - id
            - version
          properties:
            id:
              type: string
              example: 'fd6ef7c5-b18c-48e6-94e3-81037706763d'
            version:
              type: string
              example: '1.0.0'
            jobControlOptions:
              type: array
              items:
                $ref: '#/components/schemas/jobControlOptions'
            outputTransmission:
              type: array
              items:
                $ref: '#/components/schemas/transmissionMode'
            links:
              type: array
              items:
                $ref: '#/components/schemas/processLink'
    descriptionType:
      type: object
      properties:
        title:
          type: string
          example: 'EchoProcess'
    jobControlOptions:
      type: string
      enum:
        - sync-execute
        - async-execute
        - dismiss
    transmissionMode:
      type: string
      default: value
      enum:
        - value
        - reference
    processLink:
      type: object
      properties:
        href:
          type: string
          example: 'https://ogc.iudx.io/processes/fd6ef7c5-b18c-48e6-94e3-81037706763d'
        rel:
          type: string
          example: self
        type:
          type: string
          example: application/json
        title:
          type: string
          example: Echo Process
    processesLink:
      type: object
      properties:
        href:
          type: string
          example: 'https://ogc.iudx.io/processes?f=json'
        rel:
          type: string
          example: self
        type:
          type: string
          example: application/json
