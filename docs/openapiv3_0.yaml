openapi: 3.0.0
info:
  version: 1.0.1
  title: OGC Compliant IUDX GSX Server
  # summary: OpenAPI 3.0 Specifications for OGC Compliant IUDX GSX Server to retrieve feature data
  description: |-
    OGC compliant Features and Common API definitions.
    Includes Schema and Response Objects.
  contact:
    name: Open Geospatial Consortium (OGC)
    email: standards-team@ogc.org
    url: 'https://www.ogc.org/contacts'
  license:
    url: 'https://opensource.org/license/mit/'
    name: MIT
servers:
  - url: 'http://localhost:3000'
    description: OGC-Resource-Server
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: Landing page
      description: |
        Landing page for the OGC compliant Resource Server.
        It provides links to the API definition (link relations service-desc and service-doc), the Conformance declaration (path /conformance, link relation conformance), and the Feature Collections (path /collections, link relation data).
      operationId: getLandingPage
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        href:
                          type: string
                        rel:
                          type: string
                        type:
                          type: string
                        title:
                          type: string
                required:
                  - links
                x-examples:
                  Example 1:
                    title: Administrative Boundaries of India
                    description: Information on Indian administrative boundaries.
                    links:
                      - href: 'https://ogc-resource-server.iudx.io/'
                        rel: self
                        type: application/json
                        title: this document
                      - href: 'http://ogc-resource-server.iudx.io/api'
                        rel: service-desc
                        type: application/vnd.oai.openapi+json;version=3.0
                        title: the API definition
                      - href: 'https://ogc-resource-server.iudx.io/conformance'
                        rel: conformance
                        type: application/json
                        title: OGC API conformance classes implemented by this server
                      - href: 'https://ogc-resource-server.iudx.io/collections'
                        rel: data
                        type: application/json
                        title: Information about the feature collections
              examples:
                Example 1:
                  value:
                    title: Buildings in Bonn
                    description: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.
                    links:
                      - href: 'http://data.example.org/'
                        rel: self
                        type: application/json
                        title: this document
                      - href: 'http://data.example.org/api'
                        rel: service-desc
                        type: application/vnd.oai.openapi+json;version=3.0
                        title: the API definition
                      - href: 'http://data.example.org/conformance'
                        rel: conformance
                        type: application/json
                        title: OGC API conformance classes implemented by this server
                      - href: 'http://data.example.org/collections'
                        rel: data
                        type: application/json
                        title: Information about the feature collections
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                  detail:
                    type: string
                x-examples:
                  Example 1:
                    type: 'urn:dx:gsx:badRequest'
                    title: Bad Request Data
                    detail: Missing/Invalid parameters
              examples:
                Example 1:
                  value:
                    type: 'urn:dx:ogc:badRequest'
                    title: Bad Request Data
                    detail: Missing/Invalid parameters
      servers:
        - url: 'http://localhost:3000'
          description: OGC-Resource-Server
  /conformance:
    get:
      tags:
        - Capabilities
      summary: information about specifications that this API conforms to
      description: |-
        A list of all conformance classes specified in a standard that the
        server conforms to.
      operationId: getConformanceClasses
      responses:
        '200':
          $ref: '#/components/responses/ConformanceDeclaration'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'http://localhost:3000'
          description: OGC-Resource-Server
  /collections:
    get:
      tags:
        - Capabilities
      summary: the feature collections in the dataset
      description: '/collections will fetch the list of feature collections to DX Data Consumers based on the required format and the limit supplied. This API provides a birds-eye-view for all avialable Feature Collections. '
      operationId: getCollections
      responses:
        '200':
          $ref: '#/components/responses/Collections'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'http://localhost:3000'
          description: OGC-Resource-Server
  '/collections/{collectionId}':
    get:
      tags:
        - Capabilities
      summary: describe the feature collection with id `collectionId`
      operationId: describeCollection
      parameters:
        - $ref: '#/components/parameters/collectionId'
      responses:
        '200':
          $ref: '#/components/responses/Collection'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'http://localhost:3000'
          description: OGC-Resource-Server
  '/collections/{collectionId}/items':
    get:
      tags:
        - Data
      summary: fetch features
      description: |-
        Fetch features of the feature collection with id `collectionId`.

        Every feature in a dataset belongs to a collection. A dataset may
        consist of multiple feature collections. A feature collection is often a
        collection of features of a similar type, based on a common schema.

        Use content negotiation to request for GeoJSON.
      operationId: getFeatures
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/collectionId'
      responses:
        '200':
          $ref: '#/components/responses/Features'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'http://localhost:3000'
          description: OGC-Resource-Server
  '/collections/{collectionId}/items/{featureId}':
    get:
      tags:
        - Data
      summary: fetch a single feature
      description: |-
        Fetch the feature with id `featureId` in the feature collection
        with id `collectionId`.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getFeature
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/featureId'
      responses:
        '200':
          $ref: '#/components/responses/Feature'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      servers:
        - url: 'http://localhost:3000'
          description: OGC-Resource-Server
tags:
  - name: Capabilities
    description: essential characteristics of this API
  - name: Data
    description: access to data (features)
components:
  parameters:
    bbox:
      name: bbox
      in: query
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on whether the
        coordinate reference system includes a vertical axis (height or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        If the value consists of four numbers, the coordinate reference system is
        WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)
        unless a different coordinate reference system is specified in the parameter `bbox-crs`.

        If the value consists of six numbers, the coordinate reference system is WGS 84
        longitude/latitude/ellipsoidal height (http://www.opengis.net/def/crs/OGC/0/CRS84h)
        unless a different coordinate reference system is specified in the parameter `bbox-crs`.

        The query parameter `bbox-crs` is specified in OGC API - Features - Part 2: Coordinate
        Reference Systems by Reference.

        For WGS 84 longitude/latitude the values are in most cases the sequence of
        minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the decision of the
        server whether only a single spatial geometry property is used to determine
        the extent or all relevant geometries.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: number
    datetime:
      name: datetime
      in: query
      description: |-
        Either a date-time or an interval. Date and time expressions adhere to RFC 3339.
        Intervals may be bounded or half-bounded (double-dots at start or end).

        Examples:

        * A date-time: "2018-02-12T23:20:50Z"
        * A bounded interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Half-bounded intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

        Only features that have a temporal property that intersects the value of
        `datetime` are selected.

        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      required: false
      style: form
      explode: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: |-
        The optional limit parameter limits the number of items that are presented in the response document.

        Only items are counted that are on the first level of the collection in the response document.
        Nested objects contained within the explicitly requested items shall not be counted.

        Minimum = 1. Maximum = 10000. Default = 10.
      required: false
      style: form
      explode: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10
    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
    featureId:
      name: featureId
      in: path
      description: local identifier of a feature
      required: true
      schema:
        type: string
  responses:
    LandingPage:
      description: |-
        The landing page provides links to the API definition
        (link relations `service-desc` and `service-doc`),
        the Conformance declaration (path `/conformance`,
        link relation `conformance`), and the Feature
        Collections (path `/collections`, link relation
        `data`).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
          examples:
            default:
              value:
                type: 'urn:dx:ogc:success'
                title: Buildings in Bonn
                description: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.
                links:
                  - href: 'http://data.example.org/'
                    rel: self
                    type: application/json
                    title: this document
                  - href: 'http://data.example.org/api'
                    rel: service-desc
                    type: application/vnd.oai.openapi+json;version=3.0
                    title: the API definition
                  - href: 'http://data.example.org/api.html'
                    rel: service-doc
                    type: text/html
                    title: the API documentation
                  - href: 'http://data.example.org/conformance'
                    rel: conformance
                    type: application/json
                    title: OGC API conformance classes implemented by this server
                  - href: 'http://data.example.org/collections'
                    rel: data
                    type: application/json
                    title: Information about the feature collections
        text/html:
          schema:
            type: string
    ConformanceDeclaration:
      description: |-
        The URIs of all conformance classes supported by the server.

        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance
        classes it implements and conforms to.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/confClasses'
          examples:
            Example 1:
              value:
                conformsTo:
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson'
        text/html:
          schema:
            type: string
    Collections:
      description: |-
        The feature collections shared by this API.

        The dataset is organized as one or more feature collections. This resource
        provides information about and access to the collections.

        The response contains the list of collections. For each collection, a link
        to the items in the collection (path `/collections/{collectionId}/items`,
        link relation `items`) as well as key information about the collection.
        This information includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collection'
          examples:
            default:
              value:
                links:
                  - href: 'http://data.example.org/collections.json'
                    rel: self
                    type: application/json
                    title: this document
                  - href: 'http://data.example.org/collections.html'
                    rel: alternate
                    type: text/html
                    title: this document as HTML
                  - href: 'http://schemas.example.org/1.0/buildings.xsd'
                    rel: describedby
                    type: application/xml
                    title: GML application schema for Acme Corporation building data
                  - href: 'http://download.example.org/buildings.gpkg'
                    rel: enclosure
                    type: application/geopackage+sqlite3
                    title: Bulk download (GeoPackage)
                    length: 472546
                collections:
                  - id: buildings
                    title: Buildings
                    description: Buildings in the city of Bonn.
                    extent:
                      spatial:
                        bbox:
                          - - 7.01
                            - 50.63
                            - 7.22
                            - 50.78
                      temporal:
                        interval:
                          - - '2010-02-15T12:34:56Z'
                            - null
                    links:
                      - href: 'http://data.example.org/collections/buildings/items'
                        rel: items
                        type: application/geo+json
                        title: Buildings
                      - href: 'http://data.example.org/collections/buildings/items.html'
                        rel: items
                        type: text/html
                        title: Buildings
                      - href: 'https://creativecommons.org/publicdomain/zero/1.0/'
                        rel: license
                        type: text/html
                        title: CC0-1.0
                      - href: 'https://creativecommons.org/publicdomain/zero/1.0/rdf'
                        rel: license
                        type: application/rdf+xml
                        title: CC0-1.0
            example:
              value:
                extent:
                  spatial:
                    geometry:
                      type: Point
                      coordinates:
                        - 91.27129661478112
                        - 23.828385729333068
                  temporal:
                    interval:
                      - - '2020-11-03T15:12:08+05:30'
                        - null
                id: 7fe82c98-dd1c-4453-a931-cc4f006e1a87
                itemType: feature
                title: indian-disctrict-boundaries
                description: Geographic boundary information of the districts in India.
        text/html:
          schema:
            type: string
        application/xml:
          schema:
            type: object
        multipart/form-data:
          schema:
            type: object
    Collection:
      description: |-
        Information about the feature collection with id `collectionId`.

        The response contains a link to the items in the collection
        (path `/collections/{collectionId}/items`, link relation `items`)
        as well as key information about the collection. This information
        includes:

        * A local identifier for the collection that is unique for the dataset;
        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collection'
          examples:
            collection:
              value:
                extent:
                  spatial:
                    geometry:
                      type: Point
                      coordinates:
                        - 91.27129661478112
                        - 23.828385729333068
                  temporal:
                    interval:
                      - - '2020-11-03T15:12:08+05:30'
                        - null
                id: 7fe82c98-dd1c-4453-a931-cc4f006e1a73
                itemType: feature
                title: indian-disctrict-headquarter
                description: Information on Indian administrative districts.
        text/html:
          schema:
            type: string
    Features:
      description: |-
        The response is a document consisting of features in the collection.
        The features included in the response are determined by the server
        based on the query parameters of the request. To support access to
        larger collections without overloading the client, the API supports
        paged access with links to the next page, if more features are selected
        that the page size.

        The `bbox` and `datetime` parameter can be used to select only a
        subset of the features in the collection (the features that are in the
        bounding box or time interval). The `bbox` parameter matches all features
        in the collection that are not associated with a location, too. The
        `datetime` parameter matches all features in the collection that are
        not associated with a time stamp or interval, too.

        The `limit` parameter may be used to control the subset of the
        selected features that should be returned in the response, the page size.
        Each page may include information about the number of selected and
        returned features (`numberMatched` and `numberReturned`) as well as
        links to support paging (link relation `next`).
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/featureCollectionGeoJSON'
          examples:
            default:
              value:
                type: FeatureCollection
                links:
                  - href: 'http://data.example.com/collections/buildings/items.json'
                    rel: self
                    type: application/geo+json
                    title: this document
                  - href: 'http://data.example.com/collections/buildings/items.html'
                    rel: alternate
                    type: text/html
                    title: this document as HTML
                  - href: 'http://data.example.com/collections/buildings/items.json&offset=10&limit=2'
                    rel: next
                    type: application/geo+json
                    title: next page
                timeStamp: '2018-04-03T14:52:23Z'
                numberMatched: 123
                numberReturned: 2
                features:
                  - type: Feature
                    id: '123'
                    geometry:
                      type: Polygon
                      coordinates:
                        - ...
                    properties:
                      function: residential
                      floors: '2'
                      lastUpdate: '2015-08-01T12:34:56Z'
                  - type: Feature
                    id: '132'
                    geometry:
                      type: Polygon
                      coordinates:
                        - ...
                    properties:
                      function: public use
                      floors: '10'
                      lastUpdate: '2013-12-03T10:15:37Z'
        text/html:
          schema:
            type: string
    Feature:
      description: |-
        fetch the feature with id `featureId` in the feature collection
        with id `collectionId`
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/featureGeoJSON'
          examples:
            default:
              value:
                type: Feature
                links:
                  - href: 'http://data.example.com/id/building/123'
                    rel: canonical
                    title: canonical URI of the building
                  - href: 'http://data.example.com/collections/buildings/items/123.json'
                    rel: self
                    type: application/geo+json
                    title: this document
                  - href: 'http://data.example.com/collections/buildings/items/123.html'
                    rel: alternate
                    type: text/html
                    title: this document as HTML
                  - href: 'http://data.example.com/collections/buildings'
                    rel: collection
                    type: application/geo+json
                    title: the collection document
                id: '123'
                geometry:
                  type: Polygon
                  coordinates:
                    - ...
                properties:
                  function: residential
                  floors: '2'
                  lastUpdate: '2015-08-01T12:34:56Z'
        text/html:
          schema:
            type: string
    InvalidParameter:
      description: A query parameter has an invalid value.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
    NotFound:
      description: 'The requested resource does not exist on the server. For example, a path parameter had an incorrect value.'
    NotAcceptable:
      description: 'Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource.'
    ServerError:
      description: A server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
  schemas:
    landingPage:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
              type:
                type: string
              title:
                type: string
            required:
              - href
              - rel
        description:
          type: string
      required:
        - links
      example:
        - type: 'urn:dx:gsx:success'
          title: success
          links:
            - href: 'https://ogc-rs.iudx.io/'
              rel: self
              type: application/json
              title: this document
            - href: 'https://ogc-rs.iudx.io/apis'
              rel: service-doc
              type: text/html
              title: the API documentation
            - href: 'https://ogc-rs.iudx.io/conformance'
              rel: conformance
              type: application/json
              title: OGC API conformance classes implemented by this server
            - href: 'https://ogc-rs.iudx.io/collections'
              rel: data
              type: application/json
              title: Information about the feature collections
    confClasses:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        conformsTo:
          type: array
          items:
            type: string
      required:
        - conformsTo
      example:
        - type: 'urn:dx:gsx:success'
          title: success
          conformsTo:
            - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'
            - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'
            - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson'
    collection:
      type: object
      properties:
        extent:
          type: object
          properties:
            spatial:
              type: object
              properties:
                bbox:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                      format: float
            temporal:
              type: object
              properties:
                interval:
                  type: array
                  items:
                    type: string
        id:
          type: string
        itemType:
          type: string
        title:
          type: string
        description:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collections'
      required:
        - links
        - collections
      example:
        - extent:
            spatial:
              geometry:
                type: Point
                coordinates:
                  - 91.27129661478112
                  - 23.828385729333068
            temporal:
              interval:
                - - '2020-11-03T15:12:08+05:30'
                  - null
          id: 7fe82c98-dd1c-4453-a931-cc4f006e1a73
          itemType: feature
          title: indian-disctrict-headquarter
          description: Information on Indian administrative districts.
      x-examples:
        Example 1:
          extent:
            spatial:
              geometry:
                type: Point
                coordinates:
                  - 91.27129661478112
                  - 23.828385729333068
            temporal:
              interval:
                - - '2020-11-03T15:12:08+05:30'
                  - null
          id: iisc.ac.in/89a36273d77dac4cf38114fca1bbe64392547f86/example-ogc-rs.iudx.io/admin-boundaries/indian-disctrict-headquaters
          itemType: feature
          title: indian-disctrict-headquarter
          description: Information on Indian administrative districts.
    link:
      type: object
      properties:
        href:
          type: string
          example:
            - 'http://data.example.com/buildings/123'
        rel:
          type: string
          example:
            - alternate
        type:
          type: string
          example:
            - application/geo+json
        hreflang:
          type: string
          example:
            - en
        title:
          type: string
          example:
            - 'Trierer Strasse 70, 53115 Bonn'
        length:
          type: integer
      required:
        - href
    collections:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collection'
      required:
        - links
        - collections
    featureCollectionGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          $ref: '#/components/schemas/timeStamp'
        numberMatched:
          $ref: '#/components/schemas/numberMatched'
        numberReturned:
          $ref: '#/components/schemas/numberReturned'
      required:
        - type
        - features
    featureGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        properties:
          type: object
        id:
          oneOf:
            - type: string
            - type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
      required:
        - type
        - geometry
        - properties
    geometryGeoJSON:
      oneOf:
        - $ref: '#/components/schemas/pointGeoJSON'
        - $ref: '#/components/schemas/multipointGeoJSON'
        - $ref: '#/components/schemas/linestringGeoJSON'
        - $ref: '#/components/schemas/multilinestringGeoJSON'
        - $ref: '#/components/schemas/polygonGeoJSON'
        - $ref: '#/components/schemas/multipolygonGeoJSON'
        - $ref: '#/components/schemas/geometrycollectionGeoJSON'
    pointGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          type: array
          minItems: 2
          items:
            type: number
      required:
        - type
        - coordinates
    multipointGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
      required:
        - type
        - coordinates
    linestringGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            type: array
            minItems: 2
            items:
              type: number
      required:
        - type
        - coordinates
    multilinestringGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
      required:
        - type
        - coordinates
    polygonGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
      required:
        - type
        - coordinates
    multipolygonGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                type: array
                minItems: 2
                items:
                  type: number
      required:
        - type
        - coordinates
    geometrycollectionGeoJSON:
      type: object
      properties:
        type:
          type: string
          enum:
            - GeometryCollection
        geometries:
          type: array
          items:
            $ref: '#/components/schemas/geometryGeoJSON'
      required:
        - type
        - geometries
    timeStamp:
      type: string
      description: This property indicates the time and date when the response was generated.
      format: date-time
      example:
        - '2017-08-17T08:05:32Z'
    numberMatched:
      type: integer
      description: |-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      minimum: 0
      example:
        - 127
    numberReturned:
      type: integer
      description: |-
        The number of features in the feature collection.

        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.

        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      minimum: 0
      example:
        - 10
    exception:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      required:
        - type
        - title
        - detail
      x-examples:
        Example 1:
          type: 'urn:dx:gsx:badRequest'
          title: Bad Request Data
          detail: Missing/Invalid parameters
